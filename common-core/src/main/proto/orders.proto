syntax = "proto3";

package productvisor.orders.v1;

import "ozon.proto";

option java_multiple_files = true;
option java_package = "ru.dmitartur.common.grpc";
option java_outer_classname = "OrdersProto";

// Enum для статусов заказов
enum OrderStatus {
  UNKNOWN = 0;
  AWAITING_PACKAGING = 1;
  AWAITING_DELIVER = 2;
  DELIVERING = 3;
  DELIVERED = 4;
  CANCELLED = 5;
  COMPLETED = 6;
  PROCESSING = 7;
  SHIPPED = 8;
  PENDING = 9;
  FAILED = 10;
}

// Enum для маркетов
enum Market {
  OTHER = 0;
  OZON = 1;
  WILDBERRIES = 2;
  YANDEX_MARKET = 3;
  ALIEXPRESS = 4;
}

// DTO для товара в заказе
message OrderItemDto {
  int64 id = 1;
  int64 product_id = 2;
  string offer_id = 3;
  string name = 4;
  int32 quantity = 5;
  string price = 6; // BigDecimal как строка
  string sku = 7;
}

// DTO для заказа
message OrderDto {
  int64 id = 1;
  string posting_number = 2;
  string source = 3;
  Market market = 4;
  OrderStatus status = 5;
  string created_at = 6; // OffsetDateTime как строка
  string updated_at = 7; // OffsetDateTime как строка
  string ozon_created_at = 8; // Дата создания заказа в Ozon
  string customer_name = 9;
  string customer_phone = 10;
  string address = 11;
  string total_price = 12; // BigDecimal как строка
  repeated OrderItemDto items = 13;
  
  // FBS поля - даты
  string in_process_at = 14; // OffsetDateTime как строка
  string shipment_date = 15; // OffsetDateTime как строка
  string delivering_date = 16; // OffsetDateTime как строка
  
  // FBS поля - отмена
  string cancel_reason = 17;
  int64 cancel_reason_id = 18;
  string cancellation_type = 19;
  
  // FBS поля - доставка
  string tracking_number = 20;
  string delivery_method_name = 21;
  string substatus = 22;
  bool is_express = 23;
  string warehouse_id = 26; // ID склада для управления остатками
  
  // Вычисляемые поля
  int32 days_in_transit = 24;
  int32 days_in_processing = 25;
  
  // Контекстные поля
  string company_id = 27; // UUID компании
  string owner_user_id = 28; // UUID владельца заказа
}

// Запрос для upsert заказов
message UpsertOrdersRequest {
  repeated OrderDto orders = 1;
  string company_id = 2; // Идентификатор компании для мультитенантности
}

// Ответ на upsert заказов
message UpsertOrdersResponse {
  int32 processed_count = 1;
  repeated string errors = 2;
  bool success = 3;
}

// Запрос для поиска заказа по posting number
message FindOrderRequest {
  string posting_number = 1;
}

// Ответ с заказом
message FindOrderResponse {
  OrderDto order = 1;
  bool found = 2;
}

// Запрос для получения заказов по маркету
message GetOrdersByMarketRequest {
  Market market = 1;
  int32 page = 2;
  int32 size = 3;
}

// Ответ с заказами
message GetOrdersByMarketResponse {
  repeated OrderDto orders = 1;
  int32 total_elements = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
  int32 size = 5;
}

service OrderInternalService {
  // Upsert заказов из Ozon (для обратной совместимости)
  rpc UpsertOrders (productvisor.ozon.v1.JsonRequest) returns (productvisor.ozon.v1.JsonResponse);
  
  // Новые методы для работы с DTO
  rpc UpsertOrdersDto (UpsertOrdersRequest) returns (UpsertOrdersResponse);
  rpc FindOrder (FindOrderRequest) returns (FindOrderResponse);
  rpc GetOrdersByMarket (GetOrdersByMarketRequest) returns (GetOrdersByMarketResponse);
}


